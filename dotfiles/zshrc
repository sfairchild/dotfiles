source /usr/local/opt/git-extras/share/git-extras/git-extras-completion.zsh

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  asdf
  aws
  brew
  bundler
  chucknorris
  common-aliases
  compleat
  copyfile
  docker
  docker-compose
  emoji
  gem
  git
  helm
  history
  kubectl
  jsontools
  knife
  kubectl
  last-working-dir
  mix
  node
  npm
  osx
  themes
  terraform
  tmux
  tmuxinator
  vi-mode
  wd
  web-search
  zsh_reload
)

source $ZSH/oh-my-zsh.sh

# User configuration

export VIMCONFIG=~/.vim
export VIMDATA=~/.vim

alias vrc='vim ~/.vimrc'
alias zrc='vim ~/.zshrc'

alias ctags="`brew --prefix`/bin/ctags"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Add tmuxinator autocompletes
# function rvm () {
#   if [[ $1 == 'use' ]]; then
#     rbenv shell $2
#   fi
# }
# source ~/.asdf/installs/ruby/2.6.1/lib/ruby/gems/2.6.0/gems/tmuxinator-0.15.0/completion/tmuxinator.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export PATH="/usr/local/opt/curl/bin:$PATH"

# eval "$(rbenv init -)"

autoload -Uz compinit && compinit


# Go development

export GOPATH="${HOME}/go"
# export GOROOT="$(brew --prefix golang)/libexec"
export PATH="$PATH:${GOPATH}/bin"

export PATH="$PATH:$HOME/.cabel/bin"

# set the default editor
export VISUAL=nvim
export EDITOR="$VISUAL"

alias vim="nvim"
alias vi="nvim"

# Reduces binding (ESC) timeout from .4ms to .1ms
export KEYTIMEOUT=1

export PATH="/usr/local/opt/qt/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

# For compilers to find qt you may need to set:
export LDFLAGS="-L/usr/local/opt/qt/lib"
export CPPFLAGS="-I/usr/local/opt/qt/include"

# For pkg-config to find qt you may need to set:
export PKG_CONFIG_PATH="/usr/local/opt/qt/lib/pkgconfig"

if [ -f ~/.private_env_vars ]; then
  source ~/.private_env_vars
else
  print "ERROR: File ~/.private_env_vars does not exist"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export KERL_CONFIGURE_OPTIONS="--disable-debug --disable-silent-rules --enable-shared-zlib --enable-dynamic-ssl-lib --enable-hipe --enable-sctp --enable-smp-support --enable-threads --enable-kernel-poll --enable-wx --enable-darwin-64bit --with-ssl=/usr/local/Cellar/openssl/1.0.2q"

export PATH="/usr/local/opt/openssl/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="${HOME}/bin:$PATH"

export PATH="${PATH}:${HOME}.asdf/installs/elixir/1.9.1-otp-21/bin"

alias brake='noglob bundle exec rake'
alias :q='echo "this is not VI"; sleep 0.5; exit'

# source ~/bin/set_proxy

export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000000
export SAVEHIST=10000000

alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs -nw'

. $(brew --prefix asdf)/asdf.sh
. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash

# export PATH=~/.local/bin:/Users/sfairchild/.asdf/shims:/usr/local/opt/asdf/bin:/Users/sfairchild/bin:/usr/local/sbin:/usr/local/opt/openssl/bin:/Users/sfairchild/.local/bin:/usr/local/opt/qt/bin:/usr/local/opt/curl/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Wireshark.app/Contents/MacOS:/usr/local/opt/fzf/bin:/Users/sfairchild/go/bin:/Users/sfairchild/.cabel/bin:/Users/sfairchild.asdf/installs/elixir/1.9.1-otp-21/bin

# run this to toggle connecting to endpoints like AWS while hopping on and off the vpn
function vpn() {
    if [[ "${http_proxy}" == "" ]]; then
        echo "Setting http_proxy"
        export http_proxy=http://165.225.0.39:9400
    else
        echo "Un-Setting http_proxy"
        unset http_proxy
    fi
    if [[ "${https_proxy}" == "" ]]; then
        echo "Setting https_proxy"
        export https_proxy=http://165.225.0.39:9400
    else
        echo "Un-Setting https_proxy"
        unset https_proxy
    fi
    if [[ "${no_proxy}" == "" ]]; then
        echo "Setting no_proxy"
        # export no_proxy=localhost,127.0.0.1,chef.vwusasite.com,github.vwusasite.com
        export no_proxy=localhost,127.0.0.1,chef.vwusasite.com,github.vwusasite.com,1E1D2D1DFAD6CBD1A00A15E10901AA95.sk1.us-west-2.eks.amazonaws.com,253BF845058E296248BCDE901A019CBC.yl4.us-west-2.eks.amazonaws.com,6296C41B010D2FC5801BBFA7766BE863.sk1.us-west-2.eks.amazonaws.com,59D21B7365E671BD3A616319E1EE7426.sk1.us-west-2.eks.amazonaws.com
    else
        echo "Un-Setting no_proxy"
        unset no_proxy
    fi
}

#AWSume alias to source the AWSume script
# alias awsume=". awsume"
alias awsume=". ~/.asdf/installs/python/3.8.0/bin/awsume"
#Auto-Complete function for AWSume
#Auto-Complete function for AWSume
fpath=(~/.awsume/zsh-autocomplete/ $fpath)

. /usr/local/share/zsh/site-functions
